|CtrlUnitFSM
op_i[0] => Equal2.IN6
op_i[1] => Equal0.IN5
op_i[1] => Equal2.IN5
op_i[2] => Equal0.IN4
op_i[2] => Equal1.IN4
op_i[2] => Equal2.IN4
op_i[3] => Equal0.IN3
op_i[3] => Equal1.IN3
op_i[3] => Equal2.IN3
op_i[4] => Equal0.IN2
op_i[4] => Equal1.IN2
op_i[4] => Equal2.IN2
op_i[5] => Equal0.IN1
op_i[5] => Equal1.IN1
op_i[5] => Equal2.IN1
op_i[5] => Equal3.IN1
op_i[6] => Equal0.IN0
op_i[6] => Equal1.IN0
op_i[6] => Equal2.IN0
op_i[6] => Equal3.IN0
func_i[0] => Equal4.IN0
func_i[0] => Equal5.IN1
func_i[0] => Equal6.IN1
func_i[0] => Equal7.IN1
func_i[0] => Equal8.IN1
func_i[0] => Equal9.IN3
func_i[1] => Equal4.IN1
func_i[1] => Equal5.IN0
func_i[1] => Equal6.IN0
func_i[1] => Equal7.IN0
func_i[1] => Equal8.IN3
func_i[1] => Equal9.IN2
func_i[2] => Equal8.IN0
func_i[2] => Equal9.IN0
func_i[3] => Equal8.IN2
func_i[3] => Equal9.IN1
clk => act_state~1.DATAIN
data_ack_i => always1.IN1
data_ack_i => always1.IN1
data_ack_i => always1.IN1
port_ack_i => always1.IN1
port_ack_i => always1.IN1
port_ack_i => always1.IN1
inst_ack_i => Selector1.IN3
inst_ack_i => Selector0.IN2
inst_dat_i[0] => ~NO_FANOUT~
inst_dat_i[1] => ~NO_FANOUT~
inst_dat_i[2] => ~NO_FANOUT~
inst_dat_i[3] => ~NO_FANOUT~
inst_dat_i[4] => ~NO_FANOUT~
inst_dat_i[5] => ~NO_FANOUT~
inst_dat_i[6] => ~NO_FANOUT~
inst_dat_i[7] => ~NO_FANOUT~
inst_dat_i[8] => ~NO_FANOUT~
inst_dat_i[9] => ~NO_FANOUT~
inst_dat_i[10] => ~NO_FANOUT~
inst_dat_i[11] => ~NO_FANOUT~
inst_dat_i[12] => ~NO_FANOUT~
inst_dat_i[13] => ~NO_FANOUT~
inst_dat_i[14] => ~NO_FANOUT~
inst_dat_i[15] => ~NO_FANOUT~
inst_dat_i[16] => ~NO_FANOUT~
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => Selector2.IN4
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => always1.IN1
interruption => Selector0.IN3
port_ack_o <= <GND>
inst_ack_o <= <GND>
op2_c_o <= <GND>
ALUOP_o[0] <= <GND>
ALUOP_o[1] <= <GND>
ALUOP_o[2] <= <GND>
ALUOP_o[3] <= <GND>
ALUFR_c <= <GND>
ALU_en_o <= <GND>
RegWrt_c_o <= <GND>
RegMux_c_o[0] <= <GND>
RegMux_c_o[1] <= <GND>
PCoper_o[0] <= <GND>
PCoper_o[1] <= <GND>
PCoper_o[2] <= <GND>
PCoper_o[3] <= <GND>
PC_en_o <= <GND>
pop_o <= <GND>
jsb_o <= <GND>
reti_o <= <GND>
int_o <= <GND>
stb_o <= <GND>
cyc_o <= <GND>
weport_o <= <GND>
wedata_o <= <GND>


